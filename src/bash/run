#!/usr/bin/env bash

krab_run() {
    local failures
    local fail_early
    local last
    local total

    fail_early=true
    usage=$(cat <<'EOF'
Usage: $ krab run [OPTION]... [TASK]...

TASK is one or more shell commands to run.

OPTION is one or more of the following:
    -l  Run all tasks, regardless of failures.

Examples:
    ...run 'echo "This prints something"' 'unknown-command --this-should-fail' 'echo "This does not print anything"'
    ...run -l 'echo "This prints something"' 'unknown-command --this-should-fail' 'echo "This also prints something"'
EOF
)
    while getopts 'lh' option; do
        case "$option" in
            l)
                fail_early=false
                ;;
            h)
                echo "$usage"
                exit 0
                ;;
            ?)
                echo "$usage"
                exit 2
                ;;
        esac
    done
    shift "$((OPTIND-1))"

    total=$#

    # Aggregate results.
    failures=0
    last=0

    for task in "$@"; do
        last=$((last + 1))
        krab_stdio_state "Running $task..."
        if eval "$task"; then
            krab_stdio_confirm "$task PASSED"
         else
            failures=$((failures + 1))
            krab_stdio_alert "$task FAILED"
            if $fail_early; then
                break
            fi
        fi
    done

    if [ $failures -eq 0 ]
    then
        krab_stdio_confirm "SUCCESS: $total PASSED."
        return 0
    else
        local message
        message="ERROR: $failures OUT OF $total FAILED."
        if [ $last -lt "$total" ]; then
            message="$message $((last - 1)) PASSED. $((total - last)) SKIPPED."
        fi
        krab_stdio_alert "$message"
        return 1
    fi
}
